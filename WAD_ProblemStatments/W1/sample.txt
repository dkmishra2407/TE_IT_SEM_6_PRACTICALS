
// Pagination variables
const productsPerPage = 4;
let currentPage = 1;

// Function to render products
function renderProducts() {
    const tableBody = document.querySelector('#productTable tbody');
    tableBody.innerHTML = ''; // Clear existing rows

    const startIndex = (currentPage - 1) * productsPerPage;
    const endIndex = Math.min(startIndex + productsPerPage, products.length);

    for (let i = startIndex; i < endIndex; i++) {
        const product = products[i];
        const row = document.createElement('tr');

        row.innerHTML = `
            <td><img src="${product.image}" alt="${product.name}" style="width: 100px; height: auto;"></td>
            <td>${product.name}</td>
            <td>${product.price}</td>
            <td>${product.description}</td>
        `;

        tableBody.appendChild(row);
    }

    updatePaginationControls();
}

// Function to update pagination controls
function updatePaginationControls() {
    const totalPages = Math.ceil(products.length / productsPerPage);
    const paginationControls = document.querySelector('#paginationControls');

    paginationControls.innerHTML = `
        <button ${currentPage === 1 ? 'disabled' : ''} onclick="changePage(-1)">Previous</button>
        <span>Page ${currentPage} of ${totalPages}</span>
        <button ${currentPage === totalPages ? 'disabled' : ''} onclick="changePage(1)">Next</button>
    `;
}

// Function to change page
function changePage(direction) {
    currentPage += direction;
    renderProducts();
}